Test Case ID,Test Case Title,Path,Test Type,Preconditions,Test Data,Steps,Expected Result,Allure Title,Allure Description
TC_HAPPY_01,Valid Login Flow,Happy Path,Positive,User exists with valid credentials,Email: thamidzaman96@gmail.com\nPassword: HUDL_TEST_PASSWORD env var,1. Go to LOGIN_URL\n2. Enter valid email\n3. Click Continue\n4. Enter valid password\n5. Click Continue,Dashboard loaded,Valid Login Flow,Verify that a user can successfully log in with valid credentials and is redirected to the dashboard.
TC_HAPPY_02,Reset Password Flow,Happy Path,Positive,User exists,Email: random_email(),1. Go to LOGIN_URL\n2. Enter email\n3. Click Continue\n4. Click Forgot Password\n5. Click Continue,Prompt to check email or reset URL,Reset Password Flow,Verify that the reset password flow works for a valid email, and the user is prompted to check their email.
TC_HAPPY_03,Go Back from Reset Password,Happy Path,Positive,User exists,Email: random_email(),1. Go to LOGIN_URL\n2. Enter email\n3. Click Continue\n4. Click Forgot Password\n5. Click Go Back,Returned to login page,Go Back from Reset Password,Verify that the user can navigate back to the login page from the reset password page.
TC_HAPPY_04,Access Create Account from Login Page,Happy Path,Positive,None,None,1. Go to LOGIN_URL\n2. Click Create Account,Create Account page loaded,Access Create Account from Login Page,Verify that the user can access the create account page directly from the login page.
TC_HAPPY_05,Create Account from Create Account Access Page,Happy Path,Positive,None,First Name/Last Name: from create_account_from_login_testdata.json\nEmail: random_email()\nPassword: random_password(12),1. Go to LOGIN_URL\n2. Click Create Account\n3. Enter first/last name\n4. Enter email\n5. Click Create Account\n6. Enter password\n7. Click Continue,Account created or navigated to fan page,Create Account from Create Account Access Page,Verify that a user can start the account creation flow from the main create account page using various valid data sets.
TC_HAPPY_06,Access Create Account Page from Password Page,Happy Path,Positive,User exists,Email: validuser@example.com,1. Go to LOGIN_URL\n2. Enter email\n3. Click Continue\n4. Click Create Account,Create Account page loaded,Access Create Account from Password Page,Verify that the user can access the create account page from the password entry page.
TC_HAPPY_07,Create Account from Password Page (Data-Driven),Happy Path,Positive,None,First Name/Last Name: from create_account_testdata.json\nEmail: random_email()\nPassword: random_password(12),1. Go to LOGIN_URL\n2. Enter email\n3. Click Continue\n4. Click Create Account\n5. Enter first/last name\n6. Click Create Account\n7. Enter password\n8. Click Continue,Account created or navigated to fan page,Create Account from Password Page with Data-Driven Inputs,Verify that a user can access the create account page from the password page and successfully create an account using random email and password.
TC_NEG_01,Login with Invalid Username,Negative Path,Negative,None,Invalid usernames: from invalid_usernames.json,1. Go to LOGIN_URL\n2. Enter invalid username\n3. Click Continue,Error message for invalid email,Login with Invalid Username,Verify that login fails and shows an error when an invalid username (not an email) is used.
TC_NEG_02,Login with Valid Username and Invalid Password,Negative Path,Negative,User exists,Invalid passwords: from invalid_passwords.json\nEmail: validuser@gmail.com,1. Go to LOGIN_URL\n2. Enter valid email\n3. Click Continue\n4. Enter invalid password\n5. Click Continue,Error message for invalid password,Login with Valid Username and Invalid Password,Verify that login fails and shows an error when a valid username is used with an invalid password.
TC_NEG_03,Reset Password with Invalid Email,Negative Path,Negative,None,Invalid usernames: from invalid_usernames.json,1. Go to LOGIN_URL\n2. Enter valid email\n3. Click Continue\n4. Click Forgot Password\n5. Enter invalid email\n6. Click Continue,Error message for invalid email,Reset Password with Invalid Email,Verify that the reset password flow fails and shows an error when an invalid email is provided.
TC_NEG_04,Create Account with Existing Email,Negative Path,Negative,Email already registered,First Name/Last Name: from existing_account_names.json\nEmail: thamidzaman96@gmail.com\nPassword: random_password(12),1. Go to LOGIN_URL\n2. Click Create Account\n3. Enter first/last name\n4. Enter existing email\n5. Click Create Account\n6. Enter password\n7. Click Continue,Error message for existing account,Create Account with Existing Email,Verify that creating an account with an already registered email fails, regardless of first or last name.
TC_NEG_05,Create Account with Weak Password,Negative Path,Negative,None,First Name: Jane\nLast Name: Smith\nEmail: random_email()\nWeak Passwords: from weak_passwords.json,1. Go to LOGIN_URL\n2. Click Create Account\n3. Enter first/last name\n4. Enter email\n5. Click Create Account\n6. Enter weak password\n7. Click Continue,Error message for weak password,Create Account with Weak Password,Verify that account creation flow fails and shows an error when a weak password is used.
TC_NEG_06,Create Account with Missing Fields,Negative Path,Negative,None,None,1. Go to LOGIN_URL\n2. Click Create Account\n3. Leave all fields blank\n4. Click Create Account,Error message for missing/required fields,Create Account with Missing Fields,Verify that account creation flow fails and shows an error when required fields are missing.
